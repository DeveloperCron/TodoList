// Generated by view binder compiler. Do not edit!
package com.example.todolist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.todolist.R;
import com.google.android.material.bottomsheet.BottomSheetDragHandleView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FloatingActionButton FAB;

  @NonNull
  public final FrameLayout bottomSheet;

  @NonNull
  public final MaterialButton closeButton;

  @NonNull
  public final Button createBtn;

  @NonNull
  public final TextInputLayout dateSelectorInput;

  @NonNull
  public final TextView dateText;

  @NonNull
  public final LinearLayout deleteAllBtn;

  @NonNull
  public final BottomSheetDragHandleView dragHandle;

  @NonNull
  public final TextInputLayout endTimeSelectorInput;

  @NonNull
  public final MaterialButton menuButton;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final FrameLayout sideSheet;

  @NonNull
  public final TextInputLayout startTimeSelectorInput;

  @NonNull
  public final TextInputLayout taskNameInput;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FloatingActionButton FAB, @NonNull FrameLayout bottomSheet,
      @NonNull MaterialButton closeButton, @NonNull Button createBtn,
      @NonNull TextInputLayout dateSelectorInput, @NonNull TextView dateText,
      @NonNull LinearLayout deleteAllBtn, @NonNull BottomSheetDragHandleView dragHandle,
      @NonNull TextInputLayout endTimeSelectorInput, @NonNull MaterialButton menuButton,
      @NonNull RecyclerView recyclerView, @NonNull FrameLayout sideSheet,
      @NonNull TextInputLayout startTimeSelectorInput, @NonNull TextInputLayout taskNameInput) {
    this.rootView = rootView;
    this.FAB = FAB;
    this.bottomSheet = bottomSheet;
    this.closeButton = closeButton;
    this.createBtn = createBtn;
    this.dateSelectorInput = dateSelectorInput;
    this.dateText = dateText;
    this.deleteAllBtn = deleteAllBtn;
    this.dragHandle = dragHandle;
    this.endTimeSelectorInput = endTimeSelectorInput;
    this.menuButton = menuButton;
    this.recyclerView = recyclerView;
    this.sideSheet = sideSheet;
    this.startTimeSelectorInput = startTimeSelectorInput;
    this.taskNameInput = taskNameInput;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.FAB;
      FloatingActionButton FAB = ViewBindings.findChildViewById(rootView, id);
      if (FAB == null) {
        break missingId;
      }

      id = R.id.bottomSheet;
      FrameLayout bottomSheet = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheet == null) {
        break missingId;
      }

      id = R.id.closeButton;
      MaterialButton closeButton = ViewBindings.findChildViewById(rootView, id);
      if (closeButton == null) {
        break missingId;
      }

      id = R.id.createBtn;
      Button createBtn = ViewBindings.findChildViewById(rootView, id);
      if (createBtn == null) {
        break missingId;
      }

      id = R.id.dateSelectorInput;
      TextInputLayout dateSelectorInput = ViewBindings.findChildViewById(rootView, id);
      if (dateSelectorInput == null) {
        break missingId;
      }

      id = R.id.dateText;
      TextView dateText = ViewBindings.findChildViewById(rootView, id);
      if (dateText == null) {
        break missingId;
      }

      id = R.id.deleteAllBtn;
      LinearLayout deleteAllBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteAllBtn == null) {
        break missingId;
      }

      id = R.id.drag_handle;
      BottomSheetDragHandleView dragHandle = ViewBindings.findChildViewById(rootView, id);
      if (dragHandle == null) {
        break missingId;
      }

      id = R.id.endTimeSelectorInput;
      TextInputLayout endTimeSelectorInput = ViewBindings.findChildViewById(rootView, id);
      if (endTimeSelectorInput == null) {
        break missingId;
      }

      id = R.id.menuButton;
      MaterialButton menuButton = ViewBindings.findChildViewById(rootView, id);
      if (menuButton == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.sideSheet;
      FrameLayout sideSheet = ViewBindings.findChildViewById(rootView, id);
      if (sideSheet == null) {
        break missingId;
      }

      id = R.id.startTimeSelectorInput;
      TextInputLayout startTimeSelectorInput = ViewBindings.findChildViewById(rootView, id);
      if (startTimeSelectorInput == null) {
        break missingId;
      }

      id = R.id.taskNameInput;
      TextInputLayout taskNameInput = ViewBindings.findChildViewById(rootView, id);
      if (taskNameInput == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, FAB, bottomSheet, closeButton,
          createBtn, dateSelectorInput, dateText, deleteAllBtn, dragHandle, endTimeSelectorInput,
          menuButton, recyclerView, sideSheet, startTimeSelectorInput, taskNameInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
